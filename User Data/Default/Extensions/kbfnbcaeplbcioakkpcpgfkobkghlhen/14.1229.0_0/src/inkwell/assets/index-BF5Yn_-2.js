import{D as g}from"./index-RPAtT_Gd.js";import{R as u}from"./index-BQHPBdKf.js";import{InlineCardInteractionContextToken as S,InlineCardViewContainerToken as h}from"./index-R4GM1KPr.js";import{I as m,p as w,D as k,a as C,s as y,m as E,ab as D,l as x}from"./start-C5OgI2kj.js";import{A as v}from"./index-Baxyqz_z.js";import"./PluginModule-CRib3PLZ-rw_nkrD1.js";var _=(r,e)=>(e=Symbol[r])?e:Symbol.for("Symbol."+r),f=r=>{throw TypeError(r)},I=(r,e,o)=>{if(e!=null){typeof e!="object"&&typeof e!="function"&&f("Object expected");var i;i===void 0&&(i=e[_("dispose")]),typeof i!="function"&&f("Object not disposable"),r.push([o,i,e])}return e},V=(r,e,o)=>{var i=typeof SuppressedError=="function"?SuppressedError:function(t,s,l,c){return c=Error(l),c.name="SuppressedError",c.error=t,c.suppressed=s,c},a=t=>e=o?new i(t,e,"An error was suppressed during disposal"):(o=!0,t),n=t=>{for(;t=r.pop();)try{var s=t[1]&&t[1].call(t[2]);if(t[0])return Promise.resolve(s).then(n,l=>(a(l),n()))}catch(l){a(l)}if(o)throw e};return n()};const F=r=>m(async e=>{var o=[];try{const n=I(o,new DisposableStack),t=r.getExecutionScopeDefinition("document-session"),s=r.getExecutionScopeDefinition("inline-card-interaction");n.use(await e(r.registerExecutionScopeReviver("inline-card-interaction",(p,d,b)=>(p.register({token:S,useValue:b}),p.start()))));const l=await e(r.getPlugin("ui")),c=new g;return n.use(await e(t.register({token:h,useValue:c}))),n.use(t.onStart(p=>R(p,l,c))),n.use(s.onStart(p=>A(p))),n.use(s.onStop(p=>(c.clear(),w(p.resolve(v),k,C(d=>d.hide()))))),y(n.move())}catch(n){var i=n,a=!0}finally{V(o,i,a)}});async function R(r,e,o){const i=()=>{var a;const t=(a=u.useSyncExternalStore(o.subscribe,o.getSnapshot).default)!=null?a:[];return u.createElement("div",{style:{borderRadius:"4px",backgroundColor:"red",color:"white",boxShadow:"0 2px 4px rgba(0, 0, 0, 0.1)",padding:"8px"}},t.map(s=>u.cloneElement(s.view,{key:s.key})))};return w(r.resolve(e.provides.MainViewContainer),E(a=>a.add(i,{slot:"default"})))}async function A(r){return m(async e=>{const o=await e(r.resolve(v)),i=await e(r.resolve(S));return await e(o.setScreenPosition(i.position)),await e(o.show()),y(D(async()=>{const a=await o.hide();a.ok||x.error("Failed to hide the inline card window",a.error)}))})}export{F as activate};
//# sourceMappingURL=index-BF5Yn_-2.js.map
